// Generated by Melange

import HeadlineCss from "./Headline.css";
import * as Css from "../../../css/Css.js";
import * as JsxRuntime from "react/jsx-runtime";

const css = HeadlineCss;

function render(tag, children) {
  if (tag === "h2") {
    return JsxRuntime.jsx("h2", {
                children: children
              });
  } else if (tag === "h3") {
    return JsxRuntime.jsx("h3", {
                children: children
              });
  } else if (tag === "h4") {
    return JsxRuntime.jsx("h4", {
                children: children
              });
  } else if (tag === "h5") {
    return JsxRuntime.jsx("h5", {
                children: children
              });
  } else if (tag === "h6") {
    return JsxRuntime.jsx("h6", {
                children: children
              });
  } else {
    return JsxRuntime.jsx("h1", {
                children: children
              });
  }
}

const Tag = {
  render: render
};

function Headline$Primary(Props) {
  let classNameOpt = Props.className;
  let tagOpt = Props.tag;
  let children = Props.children;
  const className = classNameOpt !== undefined ? classNameOpt : "";
  const tag = tagOpt !== undefined ? tagOpt : "h2";
  return JsxRuntime.jsx("div", {
              children: render(tag, children),
              className: Css.merge([
                    "Headline",
                    "Headline--primary",
                    className
                  ])
            });
}

const Primary = {
  make: Headline$Primary
};

function Headline$Secondary(Props) {
  let classNameOpt = Props.className;
  let tagOpt = Props.tag;
  let children = Props.children;
  const className = classNameOpt !== undefined ? classNameOpt : "";
  const tag = tagOpt !== undefined ? tagOpt : "h2";
  return JsxRuntime.jsx("div", {
              children: render(tag, children),
              className: Css.merge([
                    "Headline",
                    "Headline--secondary",
                    className
                  ])
            });
}

const Secondary = {
  make: Headline$Secondary
};

function Headline$Subheadline(Props) {
  let classNameOpt = Props.className;
  let tagOpt = Props.tag;
  let children = Props.children;
  const className = classNameOpt !== undefined ? classNameOpt : "";
  const tag = tagOpt !== undefined ? tagOpt : "h2";
  return JsxRuntime.jsx("div", {
              children: render(tag, children),
              className: Css.merge([
                    "Headline",
                    "Headline--subheadline",
                    className
                  ])
            });
}

const Subheadline = {
  make: Headline$Subheadline
};

export {
  css ,
  Tag ,
  Primary ,
  Secondary ,
  Subheadline ,
}
/* css Not a pure module */
