// Generated by Melange

import InputCss from "./Input.css";
import * as Components__InputLabel from "../InputLabel/InputLabel.js";
import * as Css from "../../../css/Css.js";
import * as Curry from "melange.js/curry.js";
import * as JsxRuntime from "react/jsx-runtime";

const css = InputCss;

function Input(Props) {
  let classNameOpt = Props.className;
  let typOpt = Props.typ;
  let placeholderOpt = Props.placeholder;
  let autoCompleteOpt = Props.autoComplete;
  let rowsOpt = Props.rows;
  let description = Props.description;
  let label = Props.label;
  let name = Props.name;
  let value = Props.value;
  let onChange = Props.onChange;
  const className = classNameOpt !== undefined ? classNameOpt : "";
  const typ = typOpt !== undefined ? typOpt : "Text";
  const placeholder = placeholderOpt !== undefined ? placeholderOpt : "";
  const autoComplete = autoCompleteOpt !== undefined ? autoCompleteOpt : "";
  const rows = rowsOpt !== undefined ? rowsOpt : 2;
  const handleChange = function (evt) {
    if (onChange !== undefined) {
      return Curry._1(onChange, evt.target.value);
    }
    
  };
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsxs(Components__InputLabel.make, {
                    text: label,
                    htmlFor: name,
                    children: [
                      description !== undefined ? JsxRuntime.jsx("aside", {
                              children: description,
                              className: "Input-description"
                            }) : null,
                      JsxRuntime.jsx("div", {
                            children: typ === "Textarea" ? JsxRuntime.jsx("textarea", {
                                    className: "Input-field",
                                    id: name,
                                    autoComplete: autoComplete,
                                    placeholder: placeholder,
                                    readOnly: onChange === undefined,
                                    rows: rows,
                                    value: value,
                                    onChange: handleChange
                                  }) : (
                                typ === "Text" ? JsxRuntime.jsx("input", {
                                        className: "Input-field",
                                        id: name,
                                        autoComplete: autoComplete,
                                        placeholder: placeholder,
                                        readOnly: onChange === undefined,
                                        type: "text",
                                        value: value,
                                        onChange: handleChange
                                      }) : JsxRuntime.jsx("input", {
                                        className: "Input-field",
                                        id: name,
                                        autoComplete: autoComplete,
                                        placeholder: placeholder,
                                        readOnly: onChange === undefined,
                                        type: "password",
                                        value: value,
                                        onChange: handleChange
                                      })
                              ),
                            className: "Input-fieldWrapper"
                          })
                    ]
                  }),
              className: Css.merge([
                    "Input",
                    className
                  ])
            });
}

const make = Input;

export {
  css ,
  make ,
}
/* css Not a pure module */
